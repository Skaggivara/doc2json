#!/usr/bin/env node

var Miso = require("miso.dataset");
var csv = require("csv");
var request = require('request');
var cli = require('cli');
var fs = require('fs');
var util = require('util');

// test key: 0Akse3y5kCOR8dEh6cWRYWDVlWmN0TEdfRkZ3dkkzdGc

var DOC = 'https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=%s&single=true&gid=%d&output=csv';

cli.parse({
    key:    ['k', 'Google docs key', 'string'],
    sheet:  ['s', 'Sheet nr', 'number', 0],
    output: ['o', 'Output file name', 'path', __dirname+'/output.json']
});

cli.main(function(args, options) {

    if(options.key){
        var url = util.format(DOC, options.key, options.sheet);
        
        request(url, function (error, response, body) {
            if (!error && response.statusCode == 200) {
    
                var csvString = body;
                var parser = csv();
                var records = [];
        
                parser.on("error", function(error){
                    console.log(error);
                });
        
                parser.on("record", function(row, index){
                    records.push(row);
                });
        
                parser.on("end", function(){
                    var ds = new Miso.Dataset({
                        data: records
                    });
                    ds.fetch({
                        error: function (error) {
                            console.log(error);
                        },
                        success: function () {
                            var rows = [];
                            var i = 1;
                        
                            this.each(function(row) {
                            
                                row._id = i;
                            
                                rows.push(row);
                            
                                i++;
                            });
                            
                            fs.writeFile(options.output, JSON.stringify(rows), function(err) {
                                if(err) {
                                    console.log(err);
                                }
                            });
                        }
                    });
                });
        
                // Tell the parser to return rows as objects keyed by column names.
                parser.from.options({
                    columns: true
                });
        
                // Start parsing. This package will not throw errors for duplicate header rows
                // or other similar issues that will stop Miso.Dataset in its tracks.
                parser.from(csvString);
        
            }else{
                console.log("Error! response code: ", response.statusCode);
            }
        });
    }else{
        console.log("You need to provide a valid key");
    }
});